from __future__ import annotations
import random

def _fmt_range(rng):
    if not rng: return "‚Äî"
    lo, hi = rng
    return f"{lo:.2f}‚Ä¶{hi:.2f}"

def humanize(ticker: str, res: dict) -> str:
    stance = res.get("stance")
    price = res["meta"].get("price")
    parts = [f"üìä {ticker} ‚Äî —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: **{price:.2f}**."]
    if stance == "BUY":
        parts.append("‚úÖ –ë–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω: **LONG** ‚Äî –±–µ—Ä—ë–º –∞–∫–∫—É—Ä–∞—Ç–Ω–æ —É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.")
    elif stance == "SHORT":
        parts.append("‚úÖ –ë–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω: **SHORT** ‚Äî —Ä–∞–±–æ—Ç–∞–µ–º –æ—Ç ¬´–∫—Ä—ã—à–∏¬ª, –±–µ–∑ —Å—É–µ—Ç—ã.")
    else:
        parts.append("‚úÖ –ë–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω: **WAIT** ‚Äî –Ω–∞ —Ç–µ–∫—É—â–∏—Ö –≤—Ö–æ–¥–∞ –Ω–µ—Ç, –¥–æ–∂–∏–¥–∞–µ–º—Å—è –ª—É—á—à–µ–π —Ñ–æ—Ä–º–∞—Ü–∏–∏.")
    # keep numbers abstract: show only zones, not pivot names
    if res.get("entry"):
        parts.append(f"üéØ –ó–æ–Ω–∞ –≤—Ö–æ–¥–∞: {_fmt_range(res['entry'])}")
    if res.get("target1"):
        parts.append(f"üìå –¶–µ–ª–∏: {res['target1']:.2f}" + (f" / {res['target2']:.2f}" if res.get('target2') else ""))
    if res.get("stop"):
        parts.append(f"üõ° –ó–∞—â–∏—Ç–∞/—Å—Ç–æ–ø: {res['stop']:.2f}")
    parts.append("‚ö†Ô∏è –ï—Å–ª–∏ —Å—Ü–µ–Ω–∞—Ä–∏–π –ª–æ–º–∞–µ—Ç—Å—è ‚Äî –≤—ã—Ö–æ–¥–∏–º –±—ã—Å—Ç—Ä–æ –∏ –∂–¥—ë–º –Ω–æ–≤—É—é —Ñ–æ—Ä–º–∞—Ü–∏—é.")
    return "\n".join(parts)