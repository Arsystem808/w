import os
import datetime as dt
import pandas as pd
import streamlit as st

from core_strategy import analyze_ticker, Horizon, StrategyError
from narrator import humanize

st.set_page_config(page_title="CapinteL‚ÄëQ ‚Äî –ê–Ω–∞–ª–∏—Ç–∏–∫ —Ä—ã–Ω–∫–æ–≤ (Polygon)", page_icon="üìà", layout="centered")

st.markdown("# CapinteL‚ÄëQ ‚Äî –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–æ–≤\n**–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö:** Polygon.io  ‚Ä¢  –±–µ–∑ CSV, –±–µ–∑ Yahoo\n")

# --- Controls
ticker = st.text_input("–¢–∏–∫–µ—Ä:", placeholder="QQQ, AAPL, X:BTCUSD", value="QQQ").strip().upper()
horizons = {
    "–¢—Ä–µ–π–¥ (1‚Äì5 –¥–Ω–µ–π)": "short",
    "–°—Ä–µ–¥–Ω–µ—Å—Ä–æ–∫ (1‚Äì4 –Ω–µ–¥–µ–ª–∏)": "mid",
    "–î–æ–ª–≥–æ—Å—Ä–æ–∫ (1‚Äì6 –º–µ—Å—è—Ü–µ–≤)": "long",
}
h_key = st.selectbox("–ì–æ—Ä–∏–∑–æ–Ω—Ç:", list(horizons.keys()), index=1)
horizon = horizons[h_key]

if st.button("–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", use_container_width=True):
    try:
        res = analyze_ticker(ticker, horizon)
        st.markdown(f"### {ticker} ‚Äî —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${res['meta']['price']:.2f}")
        st.markdown("## üß† –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        st.markdown(humanize(ticker, res))

    except StrategyError as e:
        st.error(str(e))
    except Exception as e:
        st.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

with st.expander("üõ† –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"):
    st.write("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ä–∞—Å—á—ë—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (—Å–∫—Ä—ã—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é).")
    try:
        diag = analyze_ticker(ticker or "QQQ", horizon, for_diagnostics=True)
        st.json({
            "horizon": horizon,
            "price": diag["meta"]["price"],
            "last_date": diag["meta"]["last_date"],
            "piv_frame": diag["meta"]["piv_frame"],
            "heikin_streak": diag["meta"]["ha_streak"],
            "macd_streak": diag["meta"]["macd_streak"],
            "rsi": diag["meta"]["rsi"],
            "atr": diag["meta"]["atr"],
            "near_level": diag["meta"]["near_level"],
        })
    except Exception as e:
        st.write(f"–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}")

st.caption("CapinteL‚ÄëQ –≥–æ–≤–æ—Ä–∏—Ç ¬´—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º¬ª —è–∑—ã–∫–æ–º –∏ –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Ñ–æ—Ä–º—É–ª—ã.")